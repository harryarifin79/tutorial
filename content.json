{"pages":[],"posts":[{"title":"Install Zimbra Mail Server","text":"How to Install Open Source Zimbra Mail Server (ZCS 8.8.12) on CentOS 7Mail Server is one of the important and critical Server for any organization as most of business communication done via emails only. In Open source world there are couple of free email server but Zimbra is one of the leading mail servers. Zimbra Mail Server a.k.a ZCS (Zimbra Collaboration Suite) comes in two versions, Open Source and enterprise version.PrerequisitesMinimal CentOS 78 GB RAMAt least 5 GB Free Space on /optFQDN (Fully Qualified Domain Name), in my case it is “mail.getmedik.co.id”A &amp; MX record for your ServerStep:1) Login to CentOS 7 and apply updates.Login to your CentOS 7 Server and apply the latest updates using following yum command and then reboot,1yum update &amp;&amp; yum upgrade -y ; rebootAfter the reboot, set the hostname of your server, in my case I am setting it as “mail.getmedik.co.id”12~]# hostnamectl set-hostname &quot;mail.getmedik.co.id&quot;~]# exec bashAdd the following lines in /etc/hosts file,1192.168.0.108 mail.getmedik.co.id mailAfter configuring the hostname, verify the A and MX is configure for your domain using dig command,12[root@mail ~]# dig -t A mail.getmedik.co.id[root@mail ~]# dig -t MX getmedik.co.idStep:2) Install Zimbra dependencies using yumRun the below command to install Zimbra / ZCS dependencies1[root@mail ~]# yum install unzip net-tools sysstat openssh-clients perl-core libaio nmap-ncat libstdc++.so.6 wget -yStep:3) Download latest version of Zimbra (ZCS 8.8.12) using wget commandCreate a folder with the name “zimbra”1[root@mail ~]# mkdir zimbra &amp;&amp; cd zimbraUse below wget command to download the latest version of ZCS 8.8.10 from the terminal,1[root@mail zimbra]# wget https://files.zimbra.com/downloads/8.8.12_GA/zcs-8.8.12_GA_3794.RHEL6_64.20190329045002.tgz --no-check-certificateStep:4 Install Zimbra / ZCS 8.8.12Extract the downloaded tgz file of ZCS 8.8.10 using the beneath tar command1[root@mail zimbra]# tar zxpvf zcs-8.8.10_GA_3039.RHEL7_64.20180928094617.tgzGo to extracted folder and run the install script,12[root@mail zimbra]# cd zcs-8.8.12_GA_3794.RHEL6_64.20190329045002[root@mail zcs-8.8.12_GA_3794.RHEL6_64.20190329045002]# ./install.shOnce we run above install script then we will get text-based installation wizard, to Accept the license, press YNow Press 7 and then 4 to set admin user password,Admin-User-Password-Set-Zimbra-Installation-CentOS7Now press “r” to go to previous menu and then press “a” to apply the changes.Once all the changes are applied and Zimbra related services are started then we will get the output something like below,Zimbra-Installation-Completed-CentOS7Open the ports in the firewall in case os firewall is running on your server12345[root@mail ~]# firewall-cmd --permanent --add-port={25,80,110,143,443,465,587,993,995,5222,5223,9071,7071}/tcpsuccess[root@mail ~]# firewall-cmd --reloadsuccess[root@mail ~]#Step:5) Access Zimbra Admin Portal & Web Mail ClientTo access the Zimbra Admin Portal, type below URL in Web Browserhttps://mail.getmedik.co.id:7071/","link":"/install-zimbra/"},{"title":"Install MongoDB Cluster","text":"How to Install a MongoDB Sharded Cluster on CentOS 7Sharding is a MongoDB process to store data-set across different machines. It allows you to do a horizontal scale of data, partition data across independent instances, and it can be ‘Replica Sets’. Data-set partitioning on ‘Sharding’ uses shard key. Sharding allows you to add more machines based on data growth on your stack.Sharding and ReplicationLet’s make it simple. When you have collections of music, ‘Sharding’ will save and keep your music collections into a different folder. ‘Replication,’ on the other hand, is just syncing your music collections to other instances.Three Sharding ComponentsShard - Used to store all data, and in a production environment, each shard is replica sets. Provides high-availability and data consistency.Config Server - Used to store cluster metadata, contains a mapping of cluster data set and shards. This data is used by mongos/query server to deliver operations. It’s recommended to use more than 3 instances in production.Mongos/Query Router - This is just mongo instances running as application interfaces. The application will make requests to mongos instances, and then mongos will deliver the requests using shard key to the shards replica sets.Prerequisites3 centOS 7 server as Config, Shard, and Mongos/Query Router123192.168.88.100 mongod1192.168.88.101 mongod2192.168.88.102 mongod3PORT123427017 mongos/Query27018 Config Replica Set27019 Shard1 Replica Set27020 Shard2 Replica SetRoot privilegesEach server connected to another serverStep 1 - Disable SELinux and Configure HostsFor this tutorial, we will disable SELinux. Change SELinux configuration from ‘enforcing’ to ‘disabled’.Connect to all nodes through OpenSSH.1ssh root@SERVERIPDisable SELinux by editing the configuration file.1vim /etc/sysconfig/selinuxChange SELinux value to ‘disabled’.1SELINUX=disabledSave and exit.Next, edit the hosts file on each server.1vim /etc/hostsPaste the following hosts configuration:123192.168.88.100 mongod1192.168.88.101 mongod2192.168.88.102 mongod3Save and exit.Now restart all servers:1rebootStep 2 - Install MongoDB on All InstancesWe will use latest MongoDB (MongoDB 4.2) for all instances. Add new MongoDB repository by executing the following commands:12345678cat &lt;&lt;'EOF' &gt;&gt; /etc/yum.repos.d/mongodb.repo[mongodb-org-4.2]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.2/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.2.ascEOFNow install mongodb 4.2 from mongodb repository using the yum command below.1sudo yum -y install mongodb-orgAfter mongodb is installed, use ‘mongo’ or ‘mongod’ command in the following way to check version details.1mongod --versionInstall MongoDB on All InstancesStep 3 - Create Config, Shard Server Replica Sets and Mongos/Query on each ServerIn the prerequisites section, we’ve already defined config server with 3 machines as a ‘configsvr’. And in this step, we will configure it to be a replica set.If there is mongod service running on the server, stop it with the following systemctl command.12systemctl stop mongodsystemctl disable mongodcopy mongod.conf1234cp /etc/mongod.conf /home/mongoconfig.confcp /etc/mongod.conf /home/shard1.confcp /etc/mongod.conf /home/shard2.confcp /etc/mongod.conf /home/mongos.confopen mongodb configuration ‘mongoconfig.conf’.1vim /home/mongoconfig.confChange DB storage path to your own directory. We will use ‘/mongodb/mongoconfig/‘.12345678910111213systemLog: destination: file logAppend: true path: /mongodb/mongoconfig/log/configsvr.logstorage: dbPath: /mongodb/mongoconfig/datanet: port: 27018bindIP: 192.168.88.100,127.0.0.1replication: replSetName: &quot;rs0&quot;sharding: clusterRole: configsvrSave and exit.open mongodb configuration ‘shard1.conf’.1vim /home/shard1.confChange DB storage path to your own directory. We will use ‘/mongodb/shard1/‘.12345678910111213systemLog: destination: file logAppend: true path: /mongodb/shard/log/shard1.logstorage: dbPath: /mongodb/shard/shard1/datanet: port: 27019bindIP: 192.168.88.100,127.0.0.1replication: replSetName: &quot;rs1&quot;sharding: clusterRole: shardsvrSave and exit.open mongodb configuration ‘shard2.conf’.1vim /home/shard2.confChange DB storage path to your own directory. We will use ‘/mongodb/shard2/‘.12345678910111213systemLog: destination: file logAppend: true path: /mongodb/shard/log/shard2.logstorage: dbPath: /mongodb/shard/shard2/datanet: port: 27020bindIP: 192.168.88.100,127.0.0.1replication: replSetName: &quot;rs2&quot;sharding: clusterRole: shardsvrSave and exit.open mongodb configuration ‘mongos.conf’.1vim /home/mongos.confNo need data folder on mongos just log file. Command all the storage and replication123456789systemLog: destination: file logAppend: true path: /mongodb/mongos/log/mongos.lognet: port: 27017bindIP: 192.168.88.100,127.0.0.1sharding: configDB: rs0/192.168.88.100:27018,192.168.88.101:27018,192.168.88.102:27018Save and exit.Create FolderNext, we must create a new directory for MongoDB data, and then change the ownership permissions of that directory to the ‘mongod’ user.123456789101112mkdir -p /mongodb/mongoconfig/logmkdir -p /mongodb/mongoconfig/datamkdir -p /mongodb/shard/logmkdir -p /mongodb/shard/shard1/datamkdir -p /mongodb/shard/shard2/datamkdir -p /mongodb/mongos/log/mongos.logchown -R mongod:mongod /mongodb/mongoconfig/logchown -R mongod:mongod /mongodb/mongoconfig/datachown -R mongod:mongod /mongodb/shard/logchown -R mongod:mongod /mongodb/shard/shard1/datachown -R mongod:mongod /mongodb/shard/shard2/datachown -R mongod:mongod /mongodb/mongos/log/mongos.logNext, start the mongod service with the following command.1234mongod --config /home/mongoconfig.confmongod --config /home/shard1.confmongod --config /home/shard2.confmongos --config /home/mongos.confYou can check mongod service is running with the netstat command.1netstat -plntuRepeat this step in all serverStep 4 - Initiate member on all mongodAdd Config Server in Replica SetConfigsvr are ready for the replica set. Connect to the ‘mongod1’ server and access the mongo shell.12ssh root@mongod1mongo --port 27018Initiate the replica set name with all configsvr members using the query below.123rs.initiate()rs.add(&quot;192.168.88.101:27018&quot;)rs.add(&quot;192.168.88.102:27018&quot;)If you get a results ‘{ “ok” : 1 }’, it means the configsvr is already configured with the replica set.Initiate the replica set name with all configsvr membersand you will be able to see which node is master and which node is secondary.1rs.status()The configuration of Config Server Replica Set is done.configuration of Config Server Replica SetAdd Shard Server in Replica SetShard1 and Shard2 are ready for the replica set. Connect to the ‘mongod1’ server and access the mongo shell.12345678910111213141516171819mongo --port 27019Initiate the replica set name with all Shard1 members using the query below.rs.initiate()rs.add(&quot;192.168.88.101:27019&quot;)rs.add(&quot;192.168.88.102:27019&quot;)rs.status()exitmongo --port 27020Initiate the replica set name with all Shard2 members using the query below.rs.initiate()rs.add(&quot;192.168.88.101:27020&quot;)rs.add(&quot;192.168.88.102:27020&quot;)rs.status()exitIf you get a results ‘{ “ok” : 1 }’, it means the Shard is already configured with the replica set.Initiate the replica set name with all Shards members and you will be able to see which node is master and which node is secondary.The configuration of Config Server Replica Set is done.configuration of Shard Server Replica SetAdd Mongos MemberConfigure mongos/Query Router12345mongo --port 27017sh.addShard( &quot;rs1/192.168.88.100:27019,192.168.88.101:27019,192.168.88.102:27019&quot;)sh.addShard( &quot;rs1/192.168.88.100:27020,192.168.88.101:27020,192.168.88.102:27020&quot;)sh.status()MongoDB sharded cluster on CentOS 7 successfully installed and deployed.reffHowtoforgeMongoDB","link":"/install-mongodb-cluster/"},{"title":"Install OpsManager MongoDb","text":"Ops Manager is an incredible tool provided by MongoDB. You need to get a licence to use it in Production but the benefits clearly worth it (more info on mongodb.com).You can see it as a dashboard opened to anyone inside your organization, where you can completely manage and automate your MongoDB instances, replica and sharding sets as well as giving many live insights about the usage and the data.To go further: Architecture, Configuration, Example Deployment Topologies.Content:InstallationSimple test deployment on CentOSAutomation AgentConfigurationAppendixInstallationSimple test deployment on CentOS (docs.opsmanager.mongodb.com)This is an interesting first step and can be used for non-production environments (dev, staging). You can validate many aspects about the procedure, such as the ports to be opened and OS options.All Ops Manager components will run on the same server: db, backup, application.MongoDB needs to be first installed and configured to host Ops Manager data &amp; backup.Pre-requisites (hosts, ntpupdate, mongod, firewall):warning: Make sure to correctly update either your DNS or the /etc/hosts file of every server, a small typo can lead to complicated investigation (true story).123456789101112131415161718# make sure ntp &amp; ntpupdate are installed (this is important for the communication between servers)sudo yum install ntpupdatesudo ntpdate 0.centos.pool.ntp.org# install MongoDB server &amp; shellecho &quot;[mongodb-org-4.2]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.2/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.2.asc&quot; | sudo tee /etc/yum.repos.d/mongodb.reposudo yum install -y mongodb-org mongodb-org-shell# for info: user mongod and group mongod have been created (you can add your user in mongod group)cat /etc/passwdcat /etc/group# service mongod is launched by default, stop it and prevent it from being started on server startupservice mongod statussudo service mongod stopsudo chkconfig --level 35 mongod off1234# create the directories for mongod: application database, backup, logssudo mkdir -p /data/mongodb/opsmanager/appdbsudo chown -R mongod:mongod /data/mongodb/opsmanager/appdbsudo chmod 770 -R /data/mongodb/opsmanager/appdb123456# open Ops Manager portssudo firewall-cmd --permanent --zone=public --add-port=8080/tcpsudo firewall-cmd --permanent --zone=public --add-port=8443/tcpsudo firewall-cmd --permanent --zone=public --add-port=27000-28000/tcpsudo firewall-cmd --permanent --zone=public --add-port=25/tcpsudo firewall-cmd --reload123456Configure &amp; launch MongoDB databases for Ops Manager (app &amp; backup)# path will depend on your directory strategy, cache size from your server capacitysudo -u mongod mongod --port 27017 --dbpath /data/mongodb/opsmanager/appdb --logpath /data/mongodb/opsmanager/logs/appdb.log --wiredTigerCacheSizeGB 1 --forksudo -u mongod mongod --port 27018 --dbpath /data/mongodb/opsmanager/backup --logpath /data/mongodb/opsmanager/logs/backup.log --fork# you can check they are up and runningps -ef | grep mongod1234567891011121314151617181920212223242526272829Download and install Ops Manager (previously known as MongoDB Monitoring Service, aka MMS)Go to mongodb download page.Select the version (latest stable one in my case) and copy RPM URL,For example: https://downloads.mongodb.com/on-prem-mms/rpm/mongodb-mms-4.2.5.56761.20191211T0141Z-1.x86_64.rpm.# retrieve and install the selected versioncurl -OL https://downloads.mongodb.com/on-prem-mms/rpm/mongodb-mms-4.2.5.56761.20191211T0141Z-1.x86_64.rpmsudo rpm -ivh mongodb-mms-3.6.3.606-1.x86_64.rpm# ll /opt/mongodb/mms# mongodb-mms user and group have been createdcat /etc/passwdcat /etc/group# edit &amp; review properties file (contains the connection string to app db)sudo vi /opt/mongodb/mms/conf/conf-mms.properties# start Ops Manager!sudo service mongodb-mms start# Generating new Ops Manager private key...# Starting pre-flight checks# Successfully finished pre-flight checks# Migrate Ops Manager data# Running migrations...[ OK ]# Start Ops Manager server# Instance 0 starting...............[ OK ]# Starting pre-flight checks# Successfully finished pre-flight checks# Start Backup Daemon...[ OK ]Open the Ops Manager URL in a browser: http://&lt;opsManagerHost&gt;:8080Click on Register then fill and submit the form, follow the guide for the basic configuration (that can be easily edited after)You should land in the Ops manager page!Automation agentOps Manager can automate all your MongoDB instances and servers thanks to the Automation Agent that must be installed on all servers.CentOS (tutorial from mongodb.com)This procedure has been validated against CentOS Linux release 7.4.1708 (Core)Log in the servermake sure ntp &amp; ntpupdate are installed12sudo yum install ntpupdatesudo ntpdate 0.centos.pool.ntp.orgports should not be used and firewall allows traffic on these ports between the servers1234sudo firewall-cmd --permanent --zone=public --add-port=8080/tcpsudo firewall-cmd --permanent --zone=public --add-port=8443/tcpsudo firewall-cmd --permanent --zone=public --add-port=27000-28000/tcpsudo firewall-cmd --reloadmake sure all URLS are known1sudo vi /etc/hostsfor example on Ops Manager URL1curl -ivs http://myopsmanagerurl:8080download the package file from Ops Manager and install it12curl -OL http://myopsmanagerurl:8080/download/agent/automation/mongodb-mms-automation-agent-manager-10.2.10.5921-1.x86_64.rhel7.rpmsudo rpm -U mongodb-mms-automation-agent-manager-10.2.10.5921-1.x86_64.rhel7.rpmfollow the comments to fill mmsGroupId, mmsApiKey, mmsBaseUrl1sudo vi /etc/mongodb-mms/automation-agent.configcreate data directory12sudo mkdir /datasudo chown mongod:mongod /datastart the automation agent1sudo service mongodb-mms-automation-agent startcheck its status1sudo service mongodb-mms-automation-agent statusinvestigate issues12ll /var/log/mongodb-mms-automationsudo more /var/log/mongodb-mms-automation/automation-agent-fatal.logYou should now be able to see your node in Ops Manager &gt; Deployment &gt; AgentsKnown issueslibsasl2.so.2: cannot open shared object file: No such file or directory/opt/mongodb-mms-automation/bin/mongodb-mms-automation-agent: error while loading shared libraries: libsasl2.so.2: cannot open shared object file: No such file or directoryFix:cd /lib64sudo ln -s libsasl2.so.3.0.0 libsasl2.so.2SocketException: Address already in useE STORAGE [initandlisten] Failed to set up listener: SocketException: Address already in useI CONTROL [initandlisten] now exitingI CONTROL [initandlisten] shutting down with code:48Fix:look at the process using the portsudo netstat -tulpn | grep :27000sudo kill processidUbuntu (tutorial from mongodb.com)Updates made from docs.cloudmanager.mongodb.com.This procedure has been validated against Ubuntu 16.04.1 LTSConfigurationMonitoringOnce the servers have configured and seen by Ops Manager, you should install at least one monitoring agent on one node.BackupMake sure a back agent is installed on a server (easy to install from the server view).Create a directory to store the head databases123mkdir /data/mongodb/backupdaemonsudo chown mongodb-mms:mongodb-mms /data/mongodb/backupdaemonsudo sudo chmod 774 -R /data/mongodb/backupdaemonIn Ops Manager, click on Admin in the top right &gt; Backup tab. Follow the prompts to configure the Backup storage. You can go with the storage in MongoDB and fill the connection with localhost:27018.In Ops Manager, click on Backup at the left and create a new entry.Email sendingIf you have an error while sending the test message, you can test directly from Ops Manager server.sudo yum install telnettelnet smtp.mycompany.lan 25AppendixFollow what’s going on!You can tail the automataion log file.1234567891011121314151617181920212223tail -f /var/log/mongodb-mms-automation/automation-agent.logYou can also look at the processes running on a MongoDB server.ps -ef | grep mongo# mongod 23947 1 0 14:15 ? 00:00:03 /var/lib/mongodb-mms-automation/mongodb-linux-x86_64-3.6.2/bin/mongod -f /data/rsDev2_12/automation-mongod.confsudo more /data/rsDev2_12/automation-mongod.conf# THIS FILE IS MAINTAINED BY http://myopsmanager:8080 . DO NOT MODIFY AS IT WILL BE OVERWRITTEN.# To make changes to your MongoDB deployment, please visit http://myopsmanager:8080 . Your Group ID is xxxxxxxxxxxxxxxxxxxxx .net: bindIp: 0.0.0.0 port: 27000processManagement: fork: &quot;true&quot;replication: replSetName: rsDev2storage: dbPath: /data/rsDev2_12systemLog: destination: file path: /data/rsDev2_12/mongodb.logsudo tail -f /data/rsDev2_12/mongodb.logCleanup a MongoDB serverIn case of issues, you may want to clean a server where a MongoDB automation agent was installed, or simply a MongoDB server.Remove MongoDB server123456789101112131415161718MongoDB files are located here: /var/lib/mongodb, /var/log/mongodb.sudo systemctl stop mongod.servicesudo systemctl disable mongod.servicesudo dpkg -P mongodsudo systemctl daemon-reloadsudo systemctl reset-failedsudo apt-get cleanRemove an automation agentMongoDB files are located here: /var/lib/mongodb-mms-automation, /var/log/mongodb-mms-automation.sudo systemctl stop mongodb-mms-automation-agentsudo dpkg -P mongodb-mms-automation-agent-managersudo rm -rf /etc/mongodb-mmssudo rm -rf /var/lib/mongodb-mms-automationsudo rm -rf /var/log/mongodb-mms-automationWait for 5 minutes so Ops manager consider the agent as down.WarningsIf you followed this procedure, you will probably get this warnings.Access control is not enabled for the databaseWARNING: Access control is not enabled for the database.Read and write access to data and configuration is unrestricted._This server is bound to localhostWARNING: This server is bound to localhost.Remote systems will be unable to connect to this server.Start the server with –bind_ipto specify which IPaddresses it should serve responses from, or with –bind_ip_all tobind to all interfaces. If this behavior is desired, start theserver with –bind_ip 127.0.0.1 to disable this warning./sys/kernel/mm/transparent_hugepage/enabled is ‘always’WARNING: /sys/kernel/mm/transparent_hugepage/enabled is ‘always’.We suggest setting it to ‘never’Using the XFS filesystem is strongly recommended with the WiredTiger storage engineWARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine,See http://dochub.mongodb.org/core/prodnotes-filesystem,You can review the different mount drives by executing: sudo df -hT.","link":"/install-ops-manager/"}],"tags":[{"name":"Zimbra","slug":"Zimbra","link":"/tags/Zimbra/"},{"name":"MongoDB","slug":"MongoDB","link":"/tags/MongoDB/"}],"categories":[{"name":"Install","slug":"Install","link":"/categories/Install/"}]}