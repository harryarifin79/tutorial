<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Install OpsManager MongoDb</title>
      <link href="/install-ops-manager/"/>
      <url>/install-ops-manager/</url>
      
        <content type="html"><![CDATA[<p><strong>Ops Manager</strong> is an incredible tool provided by MongoDB. You need to get a licence to use it in Production but the benefits clearly worth it (more info on mongodb.com).</p><p>You can see it as a dashboard opened to anyone inside your organization, where you can completely manage and automate your MongoDB instances, replica and sharding sets as well as giving many live insights about the usage and the data.</p><hr><a id="more"></a><p>To go further: Architecture, Configuration, Example Deployment Topologies.</p><p>Content:</p><ul><li>Installation</li><li>Simple test deployment on CentOS</li><li>Automation Agent</li><li>Configuration</li><li>Appendix</li><li>Installation</li></ul><p>Simple test deployment on CentOS (docs.opsmanager.mongodb.com)<br>This is an interesting first step and can be used for non-production environments (dev, staging). You can validate many aspects about the procedure, such as the ports to be opened and OS options.</p><p>All Ops Manager components will run on the same server: db, backup, application.</p><p>MongoDB needs to be first installed and configured to host Ops Manager data &amp; backup.</p><p>Pre-requisites (hosts, ntpupdate, mongod, firewall)<br>:warning: Make sure to correctly update either your DNS or the /etc/hosts file of every server, a small typo can lead to complicated investigation (true story).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># make sure ntp &amp; ntpupdate are installed (this is important for the communication between servers)</span><br><span class="line">sudo yum install ntpupdate</span><br><span class="line">sudo ntpdate 0.centos.pool.ntp.org</span><br><span class="line"># install MongoDB server &amp; shell</span><br><span class="line">echo &quot;[mongodb-org-4.2]</span><br><span class="line">name&#x3D;MongoDB Repository</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;repo.mongodb.org&#x2F;yum&#x2F;redhat&#x2F;$releasever&#x2F;mongodb-org&#x2F;4.2&#x2F;x86_64&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;www.mongodb.org&#x2F;static&#x2F;pgp&#x2F;server-4.2.asc&quot; | sudo tee &#x2F;etc&#x2F;yum.repos.d&#x2F;mongodb.repo</span><br><span class="line">sudo yum install -y mongodb-org mongodb-org-shell</span><br><span class="line"># for info: user mongod and group mongod have been created (you can add your user in mongod group)</span><br><span class="line">cat &#x2F;etc&#x2F;passwd</span><br><span class="line">cat &#x2F;etc&#x2F;group</span><br><span class="line"># service mongod is launched by default, stop it and prevent it from being started on server startup</span><br><span class="line">service mongod status</span><br><span class="line">sudo service mongod stop</span><br><span class="line">sudo chkconfig --level 35 mongod off</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># create the directories for mongod: application database, backup, logs</span><br><span class="line">sudo mkdir -p &#x2F;data&#x2F;mongodb&#x2F;opsmanager&#x2F;appdb</span><br><span class="line">sudo chown -R mongod:mongod &#x2F;data&#x2F;mongodb&#x2F;opsmanager&#x2F;appdb</span><br><span class="line">sudo chmod 770 -R &#x2F;data&#x2F;mongodb&#x2F;opsmanager&#x2F;appdb</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># open Ops Manager ports</span><br><span class="line">sudo firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;8080&#x2F;tcp</span><br><span class="line">sudo firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;8443&#x2F;tcp</span><br><span class="line">sudo firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;27000-28000&#x2F;tcp</span><br><span class="line">sudo firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;25&#x2F;tcp</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Configure &amp; launch MongoDB databases for Ops Manager (app &amp; backup)</span><br><span class="line"># path will depend on your directory strategy, cache size from your server capacity</span><br><span class="line">sudo -u mongod mongod --port 27017 --dbpath &#x2F;data&#x2F;mongodb&#x2F;opsmanager&#x2F;appdb --logpath &#x2F;data&#x2F;mongodb&#x2F;opsmanager&#x2F;logs&#x2F;appdb.log --wiredTigerCacheSizeGB 1 --fork</span><br><span class="line">sudo -u mongod mongod --port 27018 --dbpath &#x2F;data&#x2F;mongodb&#x2F;opsmanager&#x2F;backup --logpath &#x2F;data&#x2F;mongodb&#x2F;opsmanager&#x2F;logs&#x2F;backup.log  --fork</span><br><span class="line"># you can check they are up and running</span><br><span class="line">ps -ef | grep mongod</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Download and install Ops Manager (previously known as MongoDB Monitoring Service, aka MMS)</span><br><span class="line">Go to mongodb download page.</span><br><span class="line">Select the version (latest stable one in my case) and copy RPM URL,</span><br><span class="line">For example: https:&#x2F;&#x2F;downloads.mongodb.com&#x2F;on-prem-mms&#x2F;rpm&#x2F;mongodb-mms-4.2.5.56761.20191211T0141Z-1.x86_64.rpm.</span><br><span class="line"># retrieve and install the selected version</span><br><span class="line">curl -OL https:&#x2F;&#x2F;downloads.mongodb.com&#x2F;on-prem-mms&#x2F;rpm&#x2F;mongodb-mms-4.2.5.56761.20191211T0141Z-1.x86_64.rpm</span><br><span class="line">sudo rpm -ivh mongodb-mms-3.6.3.606-1.x86_64.rpm</span><br><span class="line"></span><br><span class="line"># ll &#x2F;opt&#x2F;mongodb&#x2F;mms</span><br><span class="line"># mongodb-mms user and group have been created</span><br><span class="line">cat &#x2F;etc&#x2F;passwd</span><br><span class="line">cat &#x2F;etc&#x2F;group</span><br><span class="line"># edit &amp; review properties file (contains the connection string to app db)</span><br><span class="line">sudo vi &#x2F;opt&#x2F;mongodb&#x2F;mms&#x2F;conf&#x2F;conf-mms.properties</span><br><span class="line"># start Ops Manager!</span><br><span class="line">sudo service mongodb-mms start</span><br><span class="line"># Generating new Ops Manager private key...</span><br><span class="line"># Starting pre-flight checks</span><br><span class="line"># Successfully finished pre-flight checks</span><br><span class="line"># Migrate Ops Manager data</span><br><span class="line">#    Running migrations...[  OK  ]</span><br><span class="line"># Start Ops Manager server</span><br><span class="line">#    Instance 0 starting...............[  OK  ]</span><br><span class="line"># Starting pre-flight checks</span><br><span class="line"># Successfully finished pre-flight checks</span><br><span class="line"># Start Backup Daemon...[  OK  ]</span><br><span class="line">Open the Ops Manager URL in a browser: http:&#x2F;&#x2F;&lt;opsManagerHost&gt;:8080</span><br><span class="line">Click on Register then fill and submit the form, follow the guide for the basic configuration (that can be easily edited after)</span><br><span class="line">You should land in the Ops manager page!</span><br></pre></td></tr></table></figure><p><strong>Automation agent</strong><br>Ops Manager can automate all your MongoDB instances and servers thanks to the Automation Agent that must be installed on all servers.</p><p>CentOS (tutorial from mongodb.com)<br>This procedure has been validated against CentOS Linux release 7.4.1708 (Core)</p><p>Log in the server<br><strong>make sure ntp &amp; ntpupdate are installed</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install ntpupdate</span><br><span class="line">sudo ntpdate 0.centos.pool.ntp.org</span><br></pre></td></tr></table></figure><p><strong>ports should not be used and firewall allows traffic on these ports between the servers</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;8080&#x2F;tcp</span><br><span class="line">sudo firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;8443&#x2F;tcp</span><br><span class="line">sudo firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;27000-28000&#x2F;tcp</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>make sure all URLS are known</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi &#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure><p><strong>for example on Ops Manager URL</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -ivs http:&#x2F;&#x2F;myopsmanagerurl:8080</span><br></pre></td></tr></table></figure><p><strong>download the package file from Ops Manager and install it</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -OL http:&#x2F;&#x2F;myopsmanagerurl:8080&#x2F;download&#x2F;agent&#x2F;automation&#x2F;mongodb-mms-automation-agent-manager-10.2.10.5921-1.x86_64.rhel7.rpm</span><br><span class="line">sudo rpm -U mongodb-mms-automation-agent-manager-10.2.10.5921-1.x86_64.rhel7.rpm</span><br></pre></td></tr></table></figure><p><strong>follow the comments to fill mmsGroupId, mmsApiKey, mmsBaseUrl</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi &#x2F;etc&#x2F;mongodb-mms&#x2F;automation-agent.config</span><br></pre></td></tr></table></figure><p><strong>create data directory</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir &#x2F;data</span><br><span class="line">sudo chown mongod:mongod &#x2F;data</span><br></pre></td></tr></table></figure><p><strong>start the automation agent</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mongodb-mms-automation-agent start</span><br></pre></td></tr></table></figure><p><strong>check its status</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mongodb-mms-automation-agent status</span><br></pre></td></tr></table></figure><p><strong>investigate issues</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ll &#x2F;var&#x2F;log&#x2F;mongodb-mms-automation</span><br><span class="line">sudo more &#x2F;var&#x2F;log&#x2F;mongodb-mms-automation&#x2F;automation-agent-fatal.log</span><br></pre></td></tr></table></figure><p>You should now be able to see your node in Ops Manager &gt; Deployment &gt; Agents</p><p>Known issues</p><p>libsasl2.so.2: cannot open shared object file: No such file or directory</p><p>/opt/mongodb-mms-automation/bin/mongodb-mms-automation-agent: error while loading shared libraries: libsasl2.so.2: cannot open shared object file: No such file or directory</p><p>Fix:</p><p>cd /lib64<br>sudo ln -s libsasl2.so.3.0.0 libsasl2.so.2<br>SocketException: Address already in use</p><p>E STORAGE [initandlisten] Failed to set up listener: SocketException: Address already in use<br>I CONTROL [initandlisten] now exiting<br>I CONTROL [initandlisten] shutting down with code:48</p><p>Fix:</p><p><strong>look at the process using the port</strong><br>sudo netstat -tulpn | grep :27000<br>sudo kill processid<br>Ubuntu (tutorial from mongodb.com)<br>Updates made from docs.cloudmanager.mongodb.com.</p><p>This procedure has been validated against Ubuntu 16.04.1 LTS</p><p>Configuration<br>Monitoring<br>Once the servers have configured and seen by Ops Manager, you should install at least one monitoring agent on one node.<br>Backup<br>Make sure a back agent is installed on a server (easy to install from the server view).</p><p>Create a directory to store the head databases</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;data&#x2F;mongodb&#x2F;backupdaemon</span><br><span class="line">sudo chown mongodb-mms:mongodb-mms &#x2F;data&#x2F;mongodb&#x2F;backupdaemon</span><br><span class="line">sudo sudo chmod 774 -R &#x2F;data&#x2F;mongodb&#x2F;backupdaemon</span><br></pre></td></tr></table></figure><p>In Ops Manager, click on Admin in the top right &gt; Backup tab. Follow the prompts to configure the Backup storage. You can go with the storage in MongoDB and fill the connection with localhost:27018.</p><p>In Ops Manager, click on Backup at the left and create a new entry.</p><p>Email sending<br>If you have an error while sending the test message, you can test directly from Ops Manager server.</p><p>sudo yum install telnet<br>telnet smtp.mycompany.lan 25</p><p>Appendix<br>Follow what’s going on!<br>You can tail the automataion log file.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">tail -f &#x2F;var&#x2F;log&#x2F;mongodb-mms-automation&#x2F;automation-agent.log</span><br><span class="line">You can also look at the processes running on a MongoDB server.</span><br><span class="line"></span><br><span class="line">ps -ef | grep mongo</span><br><span class="line"># mongod    23947      1  0 14:15 ?        00:00:03 &#x2F;var&#x2F;lib&#x2F;mongodb-mms-automation&#x2F;mongodb-linux-x86_64-3.6.2&#x2F;bin&#x2F;mongod -f &#x2F;data&#x2F;rsDev2_12&#x2F;automation-mongod.conf</span><br><span class="line">sudo more &#x2F;data&#x2F;rsDev2_12&#x2F;automation-mongod.conf</span><br><span class="line"># THIS FILE IS MAINTAINED BY http:&#x2F;&#x2F;myopsmanager:8080 . DO NOT MODIFY AS IT WILL BE OVERWRITTEN.</span><br><span class="line"># To make changes to your MongoDB deployment, please visit http:&#x2F;&#x2F;myopsmanager:8080 . Your Group ID is xxxxxxxxxxxxxxxxxxxxx .</span><br><span class="line">net:</span><br><span class="line">  bindIp: 0.0.0.0</span><br><span class="line">  port: 27000</span><br><span class="line">processManagement:</span><br><span class="line">  fork: &quot;true&quot;</span><br><span class="line">replication:</span><br><span class="line">  replSetName: rsDev2</span><br><span class="line">storage:</span><br><span class="line">  dbPath: &#x2F;data&#x2F;rsDev2_12</span><br><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  path: &#x2F;data&#x2F;rsDev2_12&#x2F;mongodb.log</span><br><span class="line">sudo tail -f &#x2F;data&#x2F;rsDev2_12&#x2F;mongodb.log</span><br><span class="line">Cleanup a MongoDB server</span><br><span class="line">In case of issues, you may want to clean a server where a MongoDB automation agent was installed, or simply a MongoDB server.</span><br></pre></td></tr></table></figure><p><strong>Remove MongoDB server</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">MongoDB files are located here: &#x2F;var&#x2F;lib&#x2F;mongodb, &#x2F;var&#x2F;log&#x2F;mongodb.</span><br><span class="line"></span><br><span class="line">sudo systemctl stop mongod.service</span><br><span class="line">sudo systemctl disable mongod.service</span><br><span class="line">sudo dpkg -P mongod</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl reset-failed</span><br><span class="line">sudo apt-get clean</span><br><span class="line">Remove an automation agent</span><br><span class="line"></span><br><span class="line">MongoDB files are located here: &#x2F;var&#x2F;lib&#x2F;mongodb-mms-automation, &#x2F;var&#x2F;log&#x2F;mongodb-mms-automation.</span><br><span class="line"></span><br><span class="line">sudo systemctl stop mongodb-mms-automation-agent</span><br><span class="line">sudo dpkg -P mongodb-mms-automation-agent-manager</span><br><span class="line">sudo rm -rf &#x2F;etc&#x2F;mongodb-mms</span><br><span class="line">sudo rm -rf &#x2F;var&#x2F;lib&#x2F;mongodb-mms-automation</span><br><span class="line">sudo rm -rf &#x2F;var&#x2F;log&#x2F;mongodb-mms-automation</span><br><span class="line">Wait for 5 minutes so Ops manager consider the agent as down.</span><br></pre></td></tr></table></figure><p>Warnings<br>If you followed this procedure, you will probably get this warnings.</p><p>Access control is not enabled for the database</p><p>WARNING: Access control is not enabled for the database.<br>Read and write access to data and configuration is unrestricted.</p><p>_This server is bound to localhost</p><p>WARNING: This server is bound to localhost.<br>Remote systems will be unable to connect to this server.<br>Start the server with –bind_ip</p><address>to specify which IP<br>addresses it should serve responses from, or with –bind_ip_all to<br>bind to all interfaces. If this behavior is desired, start the<br>server with –bind_ip 127.0.0.1 to disable this warning.<p></p><p>/sys/kernel/mm/transparent_hugepage/enabled is ‘always’</p><p>WARNING: /sys/kernel/mm/transparent_hugepage/enabled is ‘always’.<br>We suggest setting it to ‘never’</p><p>Using the XFS filesystem is strongly recommended with the WiredTiger storage engine</p><p>WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine,<br>See <a href="http://dochub.mongodb.org/core/prodnotes-filesystem" target="_blank" rel="external nofollow noopener noreferrer">http://dochub.mongodb.org/core/prodnotes-filesystem</a>,</p><p>You can review the different mount drives by executing: sudo df -hT.</p></address>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Install Zimbra Mail Server</title>
      <link href="/install-zimbra/"/>
      <url>/install-zimbra/</url>
      
        <content type="html"><![CDATA[<h1 id="How-to-Install-Open-Source-Zimbra-Mail-Server-ZCS-8-8-12-on-CentOS-7"><a href="#How-to-Install-Open-Source-Zimbra-Mail-Server-ZCS-8-8-12-on-CentOS-7" class="headerlink" title="How to Install Open Source Zimbra Mail Server (ZCS 8.8.12) on CentOS 7"></a><strong>How to Install Open Source Zimbra Mail Server (ZCS 8.8.12) on CentOS 7</strong></h1><p>Mail Server is one of the important and critical Server for any organization as most of business communication done via emails only. In Open source world there are couple of free email server but Zimbra is one of the leading mail servers. Zimbra Mail Server a.k.a ZCS (Zimbra Collaboration Suite) comes in two versions, Open Source and enterprise version.</p><hr><a id="more"></a><h2>Prerequisites</h2><ul><li>Minimal CentOS 7</li><li>8 GB RAM</li><li>At least 5 GB Free Space on /opt</li><li>FQDN (Fully Qualified Domain Name), in my case it is “mail.getmedik.co.id”</li><li>A &amp; MX record for your Server</li></ul><h2>Step:1) Login to CentOS 7 and apply updates.</h2>Login to your CentOS 7 Server and apply the latest updates using following yum command and then reboot,<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update &amp;&amp; yum upgrade -y ; reboot</span><br></pre></td></tr></table></figure>After the reboot, set the hostname of your server, in my case I am setting it as “mail.getmedik.co.id”<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~]# hostnamectl set-hostname &quot;mail.getmedik.co.id&quot;</span><br><span class="line">~]# exec bash</span><br></pre></td></tr></table></figure>Add the following lines in <b>/etc/hosts</b> file,<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.108 mail.getmedik.co.id mail</span><br></pre></td></tr></table></figure>After configuring the hostname, verify the A and MX is configure for your domain using dig command,<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mail ~]# dig -t A mail.getmedik.co.id</span><br><span class="line">[root@mail ~]# dig -t MX getmedik.co.id</span><br></pre></td></tr></table></figure><h2>Step:2) Install Zimbra dependencies using yum</h2>Run the below command to install Zimbra / ZCS dependencies<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mail ~]# yum install unzip net-tools sysstat openssh-clients perl-core libaio nmap-ncat libstdc++.so.6 wget -y</span><br></pre></td></tr></table></figure><h2>Step:3) Download latest version of Zimbra (ZCS 8.8.12) using wget command</h2>Create a folder with the name “zimbra”<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mail ~]# mkdir zimbra &amp;&amp; cd zimbra</span><br></pre></td></tr></table></figure>Use below wget command to download the latest version of ZCS 8.8.10 from the terminal,<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mail zimbra]# wget https:&#x2F;&#x2F;files.zimbra.com&#x2F;downloads&#x2F;8.8.12_GA&#x2F;zcs-8.8.12_GA_3794.RHEL6_64.20190329045002.tgz --no-check-certificate</span><br></pre></td></tr></table></figure><h2>Step:4 Install Zimbra / ZCS 8.8.12</h2>Extract the downloaded tgz file of ZCS 8.8.10 using the beneath tar command<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mail zimbra]# tar zxpvf zcs-8.8.10_GA_3039.RHEL7_64.20180928094617.tgz</span><br></pre></td></tr></table></figure>Go to extracted folder and run the install script,<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mail zimbra]# cd zcs-8.8.12_GA_3794.RHEL6_64.20190329045002</span><br><span class="line">[root@mail zcs-8.8.12_GA_3794.RHEL6_64.20190329045002]# .&#x2F;install.sh</span><br></pre></td></tr></table></figure>Once we run above install script then we will get text-based installation wizard, to Accept the license, press Y<p>Now Press 7 and then 4 to set admin user password,</p><p>Admin-User-Password-Set-Zimbra-Installation-CentOS7</p><p>Now press “r” to go to previous menu and then press “a” to apply the changes.</p><p>Once all the changes are applied and Zimbra related services are started then we will get the output something like below,</p><p>Zimbra-Installation-Completed-CentOS7</p><p>Open the ports in the firewall in case os firewall is running on your server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@mail ~]# firewall-cmd --permanent --add-port&#x3D;&#123;25,80,110,143,443,465,587,993,995,5222,5223,9071,7071&#125;&#x2F;tcp</span><br><span class="line">success</span><br><span class="line">[root@mail ~]# firewall-cmd --reload</span><br><span class="line">success</span><br><span class="line">[root@mail ~]#</span><br></pre></td></tr></table></figure><h2>Step:5) Access Zimbra Admin Portal & Web Mail Client</h2>To access the Zimbra Admin Portal, type below URL in Web Browser<p><a href="https://mail.getmedik.co.id:7071/" target="_blank" rel="external nofollow noopener noreferrer">https://mail.getmedik.co.id:7071/</a></p>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zimbra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Install MongoDB Cluster</title>
      <link href="/install-mongodb-cluster/"/>
      <url>/install-mongodb-cluster/</url>
      
        <content type="html"><![CDATA[<h1 id="How-to-Install-a-MongoDB-Sharded-Cluster-on-CentOS-7"><a href="#How-to-Install-a-MongoDB-Sharded-Cluster-on-CentOS-7" class="headerlink" title="How to Install a MongoDB Sharded Cluster on CentOS 7"></a><strong>How to Install a MongoDB Sharded Cluster on CentOS 7</strong></h1><p><strong>Sharding</strong> is a MongoDB process to store data-set across different machines. It allows you to do a horizontal scale of data, partition data across independent instances, and it can be ‘Replica Sets’. Data-set partitioning on ‘Sharding’ uses shard key. Sharding allows you to add more machines based on data growth on your stack.</p><hr><a id="more"></a><h3 id="Sharding-and-Replication"><a href="#Sharding-and-Replication" class="headerlink" title="Sharding and Replication"></a><strong>Sharding and Replication</strong></h3><p>Let’s make it simple. When you have collections of music, ‘Sharding’ will save and keep your music collections into a different folder. ‘Replication,’ on the other hand, is just syncing your music collections to other instances.</p><hr><h3 id="Three-Sharding-Components"><a href="#Three-Sharding-Components" class="headerlink" title="Three Sharding Components"></a><strong>Three Sharding Components</strong></h3><p><strong>Shard</strong> - Used to store all data, and in a production environment, each shard is replica sets. Provides high-availability and data consistency.</p><hr><p><strong>Config Server</strong> - Used to store cluster metadata, contains a mapping of cluster data set and shards. This data is used by mongos/query server to deliver operations. It’s recommended to use more than 3 instances in production.</p><hr><p><strong>Mongos/Query Router</strong> - This is just mongo instances running as application interfaces. The application will make requests to mongos instances, and then mongos will deliver the requests using shard key to the shards replica sets.</p><hr><p><strong><center>Prerequisites</center></strong></p><ul><li><strong>3 centOS 7 server as Config, Shard, and Mongos/Query Router</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.88.100      mongod1</span><br><span class="line">192.168.88.101      mongod2</span><br><span class="line">192.168.88.102      mongod3</span><br></pre></td></tr></table></figure></li><li><strong>PORT</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">27017  mongos&#x2F;Query</span><br><span class="line">27018  Config Replica Set</span><br><span class="line">27019  Shard1 Replica Set</span><br><span class="line">27020  Shard2 Replica Set</span><br></pre></td></tr></table></figure></li><li><strong>Root privileges</strong></li><li><strong>Each server connected to another server</strong><h4 id="Step-1-Disable-SELinux-and-Configure-Hosts"><a href="#Step-1-Disable-SELinux-and-Configure-Hosts" class="headerlink" title="Step 1 - Disable SELinux and Configure Hosts"></a><strong><center>Step 1 - Disable SELinux and Configure Hosts</center></strong></h4>For this tutorial, we will disable SELinux. Change SELinux configuration from ‘enforcing’ to ‘disabled’.</li></ul><p>Connect to all nodes through OpenSSH.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@SERVERIP</span><br></pre></td></tr></table></figure><p>Disable SELinux by editing the configuration file.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;sysconfig&#x2F;selinux</span><br></pre></td></tr></table></figure><p>Change SELinux value to ‘disabled’.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELINUX&#x3D;disabled</span><br></pre></td></tr></table></figure><p>Save and exit.</p><p>Next, edit the hosts file on each server.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure><p>Paste the following hosts configuration:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.88.100      mongod1</span><br><span class="line">192.168.88.101      mongod2</span><br><span class="line">192.168.88.102      mongod3</span><br></pre></td></tr></table></figure><p>Save and exit.</p><p>Now restart all servers:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="Step-2-Install-MongoDB-on-All-Instances"><a href="#Step-2-Install-MongoDB-on-All-Instances" class="headerlink" title="Step 2 - Install MongoDB on All Instances"></a><strong><center>Step 2 - Install MongoDB on All Instances</center></strong></h3><p>We will use latest MongoDB (MongoDB 4.2) for all instances. Add new MongoDB repository by executing the following commands:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;&#39;EOF&#39; &gt;&gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;mongodb.repo</span><br><span class="line">[mongodb-org-4.2]</span><br><span class="line">name&#x3D;MongoDB Repository</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;repo.mongodb.org&#x2F;yum&#x2F;redhat&#x2F;$releasever&#x2F;mongodb-org&#x2F;4.2&#x2F;x86_64&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;www.mongodb.org&#x2F;static&#x2F;pgp&#x2F;server-4.2.asc</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>Now install mongodb 4.2 from mongodb repository using the yum command below.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install mongodb-org</span><br></pre></td></tr></table></figure><p>After mongodb is installed, use ‘mongo’ or ‘mongod’ command in the following way to check version details.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --version</span><br></pre></td></tr></table></figure><p>Install MongoDB on All Instances</p><h3 id="Step-3-Create-Config-Shard-Server-Replica-Sets-and-Mongos-Query-on-each-Server"><a href="#Step-3-Create-Config-Shard-Server-Replica-Sets-and-Mongos-Query-on-each-Server" class="headerlink" title="Step 3 - Create Config, Shard Server Replica Sets and Mongos/Query on each Server"></a><strong><center>Step 3 - Create Config, Shard Server Replica Sets and Mongos/Query on each Server</center></strong></h3><p>In the prerequisites section, we’ve already defined config server with 3 machines as a ‘configsvr’. And in this step, we will configure it to be a replica set.</p><p>If there is mongod service running on the server, stop it with the following systemctl command.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mongod</span><br><span class="line">systemctl disable mongod</span><br></pre></td></tr></table></figure><p>copy mongod.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;mongod.conf &#x2F;home&#x2F;mongoconfig.conf</span><br><span class="line">cp &#x2F;etc&#x2F;mongod.conf &#x2F;home&#x2F;shard1.conf</span><br><span class="line">cp &#x2F;etc&#x2F;mongod.conf &#x2F;home&#x2F;shard2.conf</span><br><span class="line">cp &#x2F;etc&#x2F;mongod.conf &#x2F;home&#x2F;mongos.conf</span><br></pre></td></tr></table></figure><p><strong>open mongodb configuration ‘mongoconfig.conf’.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;home&#x2F;mongoconfig.conf</span><br></pre></td></tr></table></figure><p>Change DB storage path to your own directory. We will use ‘/mongodb/mongoconfig/‘.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  logAppend: true</span><br><span class="line">  path: &#x2F;mongodb&#x2F;mongoconfig&#x2F;log&#x2F;configsvr.log</span><br><span class="line">storage:</span><br><span class="line">   dbPath: &#x2F;mongodb&#x2F;mongoconfig&#x2F;data</span><br><span class="line">net:</span><br><span class="line">  port: 27018</span><br><span class="line">bindIP: 192.168.88.100,127.0.0.1</span><br><span class="line">replication:</span><br><span class="line">   replSetName: &quot;rs0&quot;</span><br><span class="line">sharding:</span><br><span class="line">   clusterRole: configsvr</span><br></pre></td></tr></table></figure><p>Save and exit.</p><p><strong>open mongodb configuration ‘shard1.conf’.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;home&#x2F;shard1.conf</span><br></pre></td></tr></table></figure><p>Change DB storage path to your own directory. We will use ‘/mongodb/shard1/‘.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  logAppend: true</span><br><span class="line">  path: &#x2F;mongodb&#x2F;shard&#x2F;log&#x2F;shard1.log</span><br><span class="line">storage:</span><br><span class="line">   dbPath: &#x2F;mongodb&#x2F;shard&#x2F;shard1&#x2F;data</span><br><span class="line">net:</span><br><span class="line">  port: 27019</span><br><span class="line">bindIP: 192.168.88.100,127.0.0.1</span><br><span class="line">replication:</span><br><span class="line">   replSetName: &quot;rs1&quot;</span><br><span class="line">sharding:</span><br><span class="line">   clusterRole: shardsvr</span><br></pre></td></tr></table></figure><p>Save and exit.</p><p><strong>open mongodb configuration ‘shard2.conf’.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;home&#x2F;shard2.conf</span><br></pre></td></tr></table></figure><p>Change DB storage path to your own directory. We will use ‘/mongodb/shard2/‘.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  logAppend: true</span><br><span class="line">  path: &#x2F;mongodb&#x2F;shard&#x2F;log&#x2F;shard2.log</span><br><span class="line">storage:</span><br><span class="line">   dbPath: &#x2F;mongodb&#x2F;shard&#x2F;shard2&#x2F;data</span><br><span class="line">net:</span><br><span class="line">  port: 27020</span><br><span class="line">bindIP: 192.168.88.100,127.0.0.1</span><br><span class="line">replication:</span><br><span class="line">   replSetName: &quot;rs2&quot;</span><br><span class="line">sharding:</span><br><span class="line">   clusterRole: shardsvr</span><br></pre></td></tr></table></figure><p>Save and exit.</p><p>open mongodb configuration ‘mongos.conf’.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;home&#x2F;mongos.conf</span><br></pre></td></tr></table></figure><p>No need data folder on mongos just log file. Command all the <strong>storage</strong> and <strong>replication</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  logAppend: true</span><br><span class="line">  path: &#x2F;mongodb&#x2F;mongos&#x2F;log&#x2F;mongos.log</span><br><span class="line">net:</span><br><span class="line">  port: 27017</span><br><span class="line">bindIP: 192.168.88.100,127.0.0.1</span><br><span class="line">sharding:</span><br><span class="line">   configDB: rs0&#x2F;192.168.88.100:27018,192.168.88.101:27018,192.168.88.102:27018</span><br></pre></td></tr></table></figure><p>Save and exit.</p><p><strong>Create Folder</strong><br>Next, we must create a new directory for MongoDB data, and then change the ownership permissions of that directory to the ‘mongod’ user.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;mongodb&#x2F;mongoconfig&#x2F;log</span><br><span class="line">mkdir -p &#x2F;mongodb&#x2F;mongoconfig&#x2F;data</span><br><span class="line">mkdir -p &#x2F;mongodb&#x2F;shard&#x2F;log</span><br><span class="line">mkdir -p &#x2F;mongodb&#x2F;shard&#x2F;shard1&#x2F;data</span><br><span class="line">mkdir -p &#x2F;mongodb&#x2F;shard&#x2F;shard2&#x2F;data</span><br><span class="line">mkdir -p &#x2F;mongodb&#x2F;mongos&#x2F;log&#x2F;mongos.log</span><br><span class="line">chown -R mongod:mongod &#x2F;mongodb&#x2F;mongoconfig&#x2F;log</span><br><span class="line">chown -R mongod:mongod &#x2F;mongodb&#x2F;mongoconfig&#x2F;data</span><br><span class="line">chown -R mongod:mongod &#x2F;mongodb&#x2F;shard&#x2F;log</span><br><span class="line">chown -R mongod:mongod &#x2F;mongodb&#x2F;shard&#x2F;shard1&#x2F;data</span><br><span class="line">chown -R mongod:mongod &#x2F;mongodb&#x2F;shard&#x2F;shard2&#x2F;data</span><br><span class="line">chown -R mongod:mongod &#x2F;mongodb&#x2F;mongos&#x2F;log&#x2F;mongos.log</span><br></pre></td></tr></table></figure><p>Next, start the mongod service with the following command.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongod --config &#x2F;home&#x2F;mongoconfig.conf</span><br><span class="line">mongod --config &#x2F;home&#x2F;shard1.conf</span><br><span class="line">mongod --config &#x2F;home&#x2F;shard2.conf</span><br><span class="line">mongos --config &#x2F;home&#x2F;mongos.conf</span><br></pre></td></tr></table></figure><p>You can check mongod service is running with the netstat command.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -plntu</span><br></pre></td></tr></table></figure><p><strong>Repeat this step in all server</strong></p><h3 id="Step-4-Initiate-member-on-all-mongod"><a href="#Step-4-Initiate-member-on-all-mongod" class="headerlink" title="Step 4 - Initiate member on all mongod"></a><strong><center>Step 4 - Initiate member on all mongod</center></strong></h3><h5 id="Add-Config-Server-in-Replica-Set"><a href="#Add-Config-Server-in-Replica-Set" class="headerlink" title="Add Config Server in Replica Set"></a><strong>Add Config Server in Replica Set</strong></h5><p>Configsvr are ready for the replica set. Connect to the ‘mongod1’ server and access the mongo shell.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@mongod1</span><br><span class="line">mongo --port 27018</span><br></pre></td></tr></table></figure><p>Initiate the replica set name with all configsvr members using the query below.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rs.initiate()</span><br><span class="line">rs.add(&quot;192.168.88.101:27018&quot;)</span><br><span class="line">rs.add(&quot;192.168.88.102:27018&quot;)</span><br></pre></td></tr></table></figure><p>If you get a results ‘{ “ok” : 1 }’, it means the configsvr is already configured with the replica set.</p><p>Initiate the replica set name with all configsvr members</p><p>and you will be able to see which node is master and which node is secondary.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rs.status()</span><br></pre></td></tr></table></figure><p>The configuration of Config Server Replica Set is done.</p><p>configuration of Config Server Replica Set</p><h5 id="Add-Shard-Server-in-Replica-Set"><a href="#Add-Shard-Server-in-Replica-Set" class="headerlink" title="Add Shard Server in Replica Set"></a><strong>Add Shard Server in Replica Set</strong></h5><p>Shard1 and Shard2 are ready for the replica set. Connect to the <strong>‘mongod1’</strong> server and access the mongo shell.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27019</span><br><span class="line"></span><br><span class="line">Initiate the replica set name with all Shard1 members using the query below.</span><br><span class="line"></span><br><span class="line">rs.initiate()</span><br><span class="line">rs.add(&quot;192.168.88.101:27019&quot;)</span><br><span class="line">rs.add(&quot;192.168.88.102:27019&quot;)</span><br><span class="line">rs.status()</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">mongo --port 27020</span><br><span class="line"></span><br><span class="line">Initiate the replica set name with all Shard2 members using the query below.</span><br><span class="line"></span><br><span class="line">rs.initiate()</span><br><span class="line">rs.add(&quot;192.168.88.101:27020&quot;)</span><br><span class="line">rs.add(&quot;192.168.88.102:27020&quot;)</span><br><span class="line">rs.status()</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>If you get a results ‘{ “ok” : 1 }’, it means the Shard is already configured with the replica set.<br>Initiate the replica set name with all Shards members and you will be able to see which node is master and which node is secondary.</p><p>The configuration of Config Server Replica Set is done.</p><p>configuration of Shard Server Replica Set</p><h5 id="Add-Mongos-Member"><a href="#Add-Mongos-Member" class="headerlink" title="Add Mongos Member"></a><strong>Add Mongos Member</strong></h5><p><strong>Configure mongos/Query Router</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27017</span><br><span class="line"></span><br><span class="line">sh.addShard( &quot;rs1&#x2F;192.168.88.100:27019,192.168.88.101:27019,192.168.88.102:27019&quot;)</span><br><span class="line">sh.addShard( &quot;rs1&#x2F;192.168.88.100:27020,192.168.88.101:27020,192.168.88.102:27020&quot;)</span><br><span class="line">sh.status()</span><br></pre></td></tr></table></figure><p>MongoDB sharded cluster on CentOS 7 successfully installed and deployed.</p><p>reff<br><a href="https://www.howtoforge.com/tutorial/install-a-mongodb-sharded-cluster-on-centos-7/" target="_blank" rel="external nofollow noopener noreferrer">Howtoforge</a><br><a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/" target="_blank" rel="external nofollow noopener noreferrer">MongoDB</a></p>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
